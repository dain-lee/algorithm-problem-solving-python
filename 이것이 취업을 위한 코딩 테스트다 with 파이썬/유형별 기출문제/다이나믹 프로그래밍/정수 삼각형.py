# 정수 삼각형
# 난이도 중하 | 풀이 시간 30분 | 시간 제한 2초 | 메모리 제한 128MB

'''
        7
      3   8
    8   1   0
  2   7   4   4
4   5   2   6   5
위 그림은 크기가 5인 정수 삼각형의 한 모습입니다.
맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하세요.
아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있습니다.
삼각형의 크기는 1 이상 500 이하입니다.
삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하입니다.
'''

'''
입력 조건
- 첫째 줄에 삼각형의 크기 n(1 <= n <= 500)이 주어지고, 둘째 줄부터 n + 1번째 줄까지 정수 삼각형이 주어집니다.

출력 조건
- 첫째 줄에 합이 최대가 되는 경로에 있는 수의 합을 출력합니다.
'''

'''
1. 왼쪽 위, 2. 바로 위
2가지 위치에서만 내려올 수 있음
구현의 편의상 초기 데이터를 담는 array 변수를 사용하지 않고, 바로 dp 테이블에 초기 데이터를 담아서 점화식에 따라서 dp 테이블 갱신
'''

n = int(input())
dp = [list(map(int, input().split())) for _ in range(n)]

# 다이나믹 프로그래밍으로 두 번째 줄부터 내려가면서 확인
for i in range(1, n):
    for j in range(i + 1):
        # 왼쪽 끝인 경우
        if j == 0:
            dp[i][j] = dp[i-1][0] + dp[i][j]
        # 오른쪽 끝인 경우
        elif j == i:
            dp[i][j] = dp[i-1][i-1] + dp[i][j]
        else:
            dp[i][j] = max(dp[i-1][j-1], dp[i-1][j]) + dp[i][j]

print(max(dp[n - 1]))