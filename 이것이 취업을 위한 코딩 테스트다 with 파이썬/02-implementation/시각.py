# 시각
# 난이도 하 | 풀이 시간 15분 | 시간 제한 2초 | 메모리 제한 128MB

'''
정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램을 작성하시오.
예를 들어 1을 입력했을 때 다음은 3이 하나라도 포함되어 있으므로 세어야 하는 시각이다.
- 00시 00분 03초
- 00시 13분 30초

반면에 다음은 3이 하나도 포함되어 있지 않으므로 세면 안 되는 시각이다.
- 00시 02분 55초
- 01시 27분 45초
'''

'''
입력 조건
- 첫째 줄에 정수 N이 입력된다. (0 <= N <= 23)

출력 조건
- 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수를 출력한다.
'''
# 5 11475

# 3 13 23 30~39 43 53
n = int(input())
count = 0

count += 15 * 60 # '분'에 3이 포함되는 경우 * 60초
count += 15 * 60 # '초'에 3이 포함되는 경우 * 60분
count -= 15 * 15 # '분'과 '초'에 모두 3이 포함되는 경우 중복 제거

result = (n//3) * 60 * 60 + (n - n//3 + 1) * count # '시'에 3이 포함되는 경우 60분 * 60초 + '시'에 3이 포함되지 않는 경우 (0부터 시작)
print(result)

# 문제 해설

'''
00시 00분 00초부터 23시 59분 59초까지의 모든 경우는 86,400가지 존재
경우의 수가 100,000개도 되지 않으므로 파이썬에서 문자열 연산을 이용해 3이 시각에 포함되어 있는지 확인해도 시간 제한 2초 안에 문제를 해결할 수 있음
가능한 경우의 수를 모두 검사해보는 완전 탐색 유형으로 분류
일반적으로 완전 탐색 알고리즘은 비효율적인 시간 복잡도를 가지고 있으므로 확인(탐색)해야 할 전체 데이터의 개수가 100만 개 이하일 때 사용하면 적절
'''

# H를 입력받기
h = int(input())

count = 0
for i in range(h + 1):
    for j in range(60):
        for k in range(60):
            # 매 시각 안에 '3'이 포함되어 있다면 카운트 증가
            if '3' in str(i) + str(j) + str(k):
                count += 1

print(count)